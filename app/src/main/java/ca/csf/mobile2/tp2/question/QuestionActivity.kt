package ca.csf.mobile2.tp2.question

import android.annotation.SuppressLint
import android.support.constraint.ConstraintLayout
import android.support.v7.app.AppCompatActivity
import android.view.View
import android.widget.*
import ca.csf.mobile2.tp2.R
import org.androidannotations.annotations.*

@SuppressLint("Registered") //Reason : Generated by Android Annotations
@EActivity(R.layout.activity_question)
class QuestionActivity : AppCompatActivity() {



    @ViewById(R.id.choice1_result_textview)
    protected lateinit var choice1ResultTextView: TextView
    @ViewById(R.id.choice2_result_textview)
    protected lateinit var choice2ResultTextView: TextView
    @ViewById(R.id.choice1_textview)
    protected lateinit var choice1TextView: TextView
    @ViewById(R.id.choice2_textview)
    protected lateinit var choice2TextView: TextView
    @ViewById(R.id.choice1_result_background)
    protected lateinit var choice1ResultBackground: View
    @ViewById(R.id.choice2_result_background)
    protected lateinit var choice2ResultBackground: View
    @ViewById(R.id.choice1_button)
    protected lateinit var choice1Button: Button
    @ViewById(R.id.choice2_button)
    protected lateinit var choice2Button: Button
    @ViewById(R.id.error_imageview)
    protected lateinit var errorImageView: ImageView
    @ViewById(R.id.error_textview)
    protected lateinit var errorTextView: TextView
    @ViewById(R.id.retry_button)
    protected lateinit var retryButton: Button
    @ViewById(R.id.progressBar)
    protected lateinit var progressBar: ProgressBar
    @ViewById(R.id.toolbar)
    protected lateinit var toolbar: Toolbar
    @ViewById(R.id.answers_view)
    protected lateinit var answersView: ConstraintLayout

    @Bean
    protected lateinit var questionService: QuestionService

    @AfterViews
    protected fun afterViews() {
        questionService.getRandomQuestion(this::onQuestionFound,
            this::onConnectivityError,
            this::onServerError)
    }

    @Click(R.id.choice1_button)
    protected fun onChoice1ButtonClick(){

    }

    @Click(R.id.choice2_button)
    protected fun onChoice2ButtonClick(){

    }

    @Click(R.id.retry_button)
    protected fun onRetryButtonClick(){

    }

    @UiThread
    protected fun onQuestionFound(question: Question) {
        showQuestion(question)
    }

    private fun showQuestion(question: Question) {
        answersView.visibility = View.VISIBLE

        choice1TextView.text = question.choice1
        choice2TextView.text = question.choice2
        toolbar.title = question.text
    }

    @UiThread
    protected fun onConnectivityError() {

    }

    @UiThread
    protected fun onServerError() {

    }

}
